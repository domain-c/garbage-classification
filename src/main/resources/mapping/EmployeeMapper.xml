<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.garbage.classification.dao.EmployeeDao">
    <resultMap id="BaseResultMap" type="com.garbage.classification.entity.Employee">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="VARCHAR"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="VARCHAR"/>
        <result column="dr" property="dr" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, type, password, username, create_time, update_time, last_login_time, dr
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from employee
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.garbage.classification.entity.Employee">
    insert into employee (id, type, password, 
      username, create_time, update_time, 
      last_login_time, dr)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, 
      #{lastLoginTime,jdbcType=VARCHAR}, #{dr,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.garbage.classification.entity.Employee">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="dr != null">
                dr,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=VARCHAR},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.garbage.classification.entity.Employee">
        update employee
        <set>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.garbage.classification.entity.Employee">
    update employee
    set type = #{type,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
      dr = #{dr,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from employee
        where username = #{username,jdbcType=VARCHAR} and dr = 0
    </select>
</mapper>